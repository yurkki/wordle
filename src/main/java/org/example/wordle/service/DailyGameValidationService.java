package org.example.wordle.service;

import org.example.wordle.model.GameStatsEntity;
import org.example.wordle.repository.GameStatsRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.time.LocalDate;
import java.time.LocalDateTime;

/**
 * –°–µ—Ä–≤–∏—Å –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –∏–≥—Ä –≤ —Ä–µ–∂–∏–º–µ –¥–Ω—è
 * –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç, —á—Ç–æ –∫–∞–∂–¥—ã–π –∏–≥—Ä–æ–∫ –º–æ–∂–µ—Ç –∏–≥—Ä–∞—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑ –≤ –¥–µ–Ω—å
 */
@Service
public class DailyGameValidationService {
    
    @Autowired
    private GameStatsRepository gameStatsRepository;
    
    @Autowired
    private LocalTimeService localTimeService;
    
    /**
     * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –º–æ–∂–µ—Ç –ª–∏ –∏–≥—Ä–æ–∫ –∏–≥—Ä–∞—Ç—å –≤ —Ä–µ–∂–∏–º–µ –¥–Ω—è —Å–µ–≥–æ–¥–Ω—è
     * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç true, –µ—Å–ª–∏ –∏–≥—Ä–æ–∫ –µ—â–µ –Ω–µ –∏–≥—Ä–∞–ª —Å–µ–≥–æ–¥–Ω—è
     */
    public boolean canPlayerPlayToday(String playerId) {
        LocalDate today = localTimeService.getCurrentMoscowDate();
        
        // –ò—â–µ–º –∑–∞–ø–∏—Å–∏ –∏–≥—Ä–æ–∫–∞ –∑–∞ —Å–µ–≥–æ–¥–Ω—è
        GameStatsEntity existingGame = gameStatsRepository.findByGameDateAndPlayerId(today, playerId);
        
        boolean canPlay = existingGame == null;
        
        if (canPlay) {
            System.out.println("‚úÖ –ò–≥—Ä–æ–∫ " + playerId + " –º–æ–∂–µ—Ç –∏–≥—Ä–∞—Ç—å —Å–µ–≥–æ–¥–Ω—è (" + today + ")");
        } else {
            System.out.println("‚ùå –ò–≥—Ä–æ–∫ " + playerId + " —É–∂–µ –∏–≥—Ä–∞–ª —Å–µ–≥–æ–¥–Ω—è (" + today + "), —Ä–µ–∑—É–ª—å—Ç–∞—Ç: " + 
                (existingGame.isSuccess() ? existingGame.getAttempts() + " –ø–æ–ø—ã—Ç–æ–∫" : "–Ω–µ —É–≥–∞–¥–∞–ª"));
        }
        
        return canPlay;
    }
    
    /**
     * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∏–≥—Ä–∞–ª –ª–∏ –∏–≥—Ä–æ–∫ —Å–µ–≥–æ–¥–Ω—è –≤ —Ä–µ–∂–∏–º–µ –¥–Ω—è
     */
    public boolean hasPlayerPlayedToday(String playerId) {
        return !canPlayerPlayToday(playerId);
    }
    
    /**
     * –ü–æ–ª—É—á–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏–≥—Ä—ã –∏–≥—Ä–æ–∫–∞ –∑–∞ —Å–µ–≥–æ–¥–Ω—è (–µ—Å–ª–∏ –∏–≥—Ä–∞–ª)
     */
    public GameStatsEntity getTodayGameResult(String playerId) {
        LocalDate today = localTimeService.getCurrentMoscowDate();
        return gameStatsRepository.findByGameDateAndPlayerId(today, playerId);
    }
    
    /**
     * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –º–æ–∂–µ—Ç –ª–∏ –∏–≥—Ä–æ–∫ –∏–≥—Ä–∞—Ç—å –≤ —Ä–µ–∂–∏–º–µ –¥–Ω—è –≤ —É–∫–∞–∑–∞–Ω–Ω—É—é –¥–∞—Ç—É
     */
    public boolean canPlayerPlayOnDate(String playerId, LocalDate date) {
        GameStatsEntity existingGame = gameStatsRepository.findByGameDateAndPlayerId(date, playerId);
        return existingGame == null;
    }
    
    /**
     * –ü–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–º, –ø–æ—á–µ–º—É –∏–≥—Ä–æ–∫ –Ω–µ –º–æ–∂–µ—Ç –∏–≥—Ä–∞—Ç—å
     */
    public String getPlayRestrictionReason(String playerId) {
        LocalDate today = localTimeService.getCurrentMoscowDate();
        GameStatsEntity existingGame = gameStatsRepository.findByGameDateAndPlayerId(today, playerId);
        
        if (existingGame == null) {
            return "–ò–≥—Ä–æ–∫ –º–æ–∂–µ—Ç –∏–≥—Ä–∞—Ç—å";
        }
        
        if (existingGame.isSuccess()) {
            return String.format("–ò–≥—Ä–æ–∫ —É–∂–µ —É–≥–∞–¥–∞–ª —Å–ª–æ–≤–æ –∑–∞ %d –ø–æ–ø—ã—Ç–æ–∫ –≤ %s", 
                existingGame.getAttempts(),
                existingGame.getCompletedAt().format(java.time.format.DateTimeFormatter.ofPattern("HH:mm")));
        } else {
            return String.format("–ò–≥—Ä–æ–∫ —É–∂–µ –∏–≥—Ä–∞–ª —Å–µ–≥–æ–¥–Ω—è –≤ %s, –Ω–æ –Ω–µ —É–≥–∞–¥–∞–ª —Å–ª–æ–≤–æ", 
                existingGame.getCompletedAt().format(java.time.format.DateTimeFormatter.ofPattern("HH:mm")));
        }
    }
    
    /**
     * –ü–æ–ª—É—á–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–≥—Ä–æ–∫–∞ –∑–∞ —Å–µ–≥–æ–¥–Ω—è
     */
    public String getTodayPlayerStats(String playerId) {
        GameStatsEntity game = getTodayGameResult(playerId);
        
        if (game == null) {
            return "–ò–≥—Ä–æ–∫ –µ—â–µ –Ω–µ –∏–≥—Ä–∞–ª —Å–µ–≥–æ–¥–Ω—è";
        }
        
        StringBuilder stats = new StringBuilder();
        stats.append("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ —Å–µ–≥–æ–¥–Ω—è:\n");
        stats.append("   –°–ª–æ–≤–æ –¥–Ω—è: ").append(game.getTargetWord()).append("\n");
        stats.append("   –†–µ–∑—É–ª—å—Ç–∞—Ç: ");
        
        if (game.isSuccess()) {
            stats.append("‚úÖ –£–≥–∞–¥–∞–ª –∑–∞ ").append(game.getAttempts()).append(" –ø–æ–ø—ã—Ç–æ–∫");
        } else {
            stats.append("‚ùå –ù–µ —É–≥–∞–¥–∞–ª");
        }
        
        stats.append("\n   –í—Ä–µ–º—è –∏–≥—Ä—ã: ").append(game.getGameTimeSeconds()).append(" —Å–µ–∫");
        stats.append("\n   –ó–∞–≤–µ—Ä—à–µ–Ω–æ –≤: ").append(
            game.getCompletedAt().format(java.time.format.DateTimeFormatter.ofPattern("HH:mm:ss"))
        );
        
        return stats.toString();
    }
    
    /**
     * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –≤—Ä–µ–º—è –≤–∞–ª–∏–¥–Ω—ã–º –¥–ª—è –∏–≥—Ä—ã –≤ —Ä–µ–∂–∏–º–µ –¥–Ω—è
     * –ò–≥—Ä–∞ –≤–æ–∑–º–æ–∂–Ω–∞ —Å 00:01 –¥–æ 23:59 –ø–æ –º–æ—Å–∫–æ–≤—Å–∫–æ–º—É –≤—Ä–µ–º–µ–Ω–∏
     */
    public boolean isValidTimeForDailyGame() {
        LocalDateTime now = localTimeService.getCurrentMoscowDateTime();
        LocalDate today = localTimeService.getCurrentMoscowDate();
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Ä–µ–º—è –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –¥–Ω—è (00:00:01 - 23:59:59)
        LocalDateTime startOfDay = today.atTime(0, 0, 1); // 00:00:01
        LocalDateTime endOfDay = today.atTime(23, 59, 59); // 23:59:59
        
        boolean isValid = !now.isBefore(startOfDay) && !now.isAfter(endOfDay);
        
        if (!isValid) {
            System.out.println("‚ùå –í—Ä–µ–º—è –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –∏–≥—Ä—ã –≤ —Ä–µ–∂–∏–º–µ –¥–Ω—è: " + 
                now.format(java.time.format.DateTimeFormatter.ofPattern("HH:mm:ss")));
        }
        
        return isValid;
    }
    
    /**
     * –ü–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è –∏–≥—Ä—ã
     */
    public String getTimeInfo() {
        LocalDateTime now = localTimeService.getCurrentMoscowDateTime();
        LocalDate today = localTimeService.getCurrentMoscowDate();
        
        StringBuilder info = new StringBuilder();
        info.append("üïê –í—Ä–µ–º—è –∏–≥—Ä—ã:\n");
        info.append("   –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è: ").append(
            now.format(java.time.format.DateTimeFormatter.ofPattern("HH:mm:ss"))
        ).append("\n");
        info.append("   –î–∞—Ç–∞: ").append(today).append("\n");
        info.append("   –ú–æ–∂–Ω–æ –∏–≥—Ä–∞—Ç—å: ").append(isValidTimeForDailyGame() ? "‚úÖ –î–∞" : "‚ùå –ù–µ—Ç");
        
        return info.toString();
    }
}
